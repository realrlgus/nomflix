{"version":3,"sources":["assets/noPosterSmall.png","Components/Header.js","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","Header","styled","header","List","ul","Item","li","props","current","SLink","Link","withRouter","pathname","location","to","Container","div","Title","span","Grid","Section","title","children","role","aria-label","Text","color","Error","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","require","length","substring","HomePresenter","nowPlaying","upcoming","popular","error","loading","Loader","map","movie","key","original_title","poster_path","vote_average","release_date","Message","config","params","api_key","language","api","axios","create","baseURL","moviesApi","get","movieDetail","append_to_response","search","term","query","encodeURIComponent","tvApi","topRated","airingToday","showDetail","HomeContainer","state","data","results","this","setState","React","Component","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","show","original_name","first_air_date","SearchContainer","event","preventDefault","searchByTerm","target","console","log","a","async","TVPresenter","TVContainer","Backdrop","bgImage","Content","Cover","Data","h1","ItemContainer","Divider","Overview","p","DetailPresenter","result","backdrop_path","name","runtime","episode_run_time","genres","genre","index","homepage","overview","DetailContainer","includes","match","push","history","parsedId","parseInt","isNaN","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cb260be4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noPosterSmall.87a0eb6a.png\";","import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Header = styled.header`\r\n  color: white;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  background-color: rgba(20, 20, 20, 0.8);\r\n  z-index: 10;\r\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst List = styled.ul`\r\n  display: flex;\r\n`;\r\nconst Item = styled.li`\r\n  width: 80px;\r\n  height: 50px;\r\n  text-align: center;\r\n  border-bottom: 5px solid\r\n    ${props => (props.current ? \"#3498db\" : \"transparent\")};\r\n  transition: border-bottom 0.3s ease-in-out;\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 50px;\r\n`;\r\n\r\nexport default withRouter(({ location: { pathname } }) => (\r\n  <Header>\r\n    <List>\r\n      <Item current={pathname === \"/\"}>\r\n        <SLink to=\"/\">Movies</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/tv\"}>\r\n        <SLink to=\"/tv\">TV</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/search\"}>\r\n        <SLink to=\"/search\">Search</SLink>\r\n      </Item>\r\n    </List>\r\n  </Header>\r\n));\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  :not(:last-child) {\r\n    margin-bottom: 50px;\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n  margin-top: 25px;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, 125px);\r\n  grid-gap: 25px;\r\n`;\r\n\r\nconst Section = ({ title, children }) => (\r\n  <Container>\r\n    <Title>{title}</Title>\r\n    <Grid>{children}</Grid>\r\n  </Container>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node\r\n  ])\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport Helmet from \"react-helmet\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n  font-size: 28px;\r\n  margin-top: 20px;\r\n`;\r\n\r\nexport default () => (\r\n  <Container>\r\n    <Helmet>\r\n      <title>Loading | Nomflix</title>\r\n    </Helmet>\r\n    <span role=\"img\" aria-label=\"Loading\">\r\n      ⏰\r\n    </span>\r\n  </Container>\r\n);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Text = styled.span`\r\n  color: ${props => props.color};\r\n  font-weight: 500;\r\n`;\r\n\r\nconst Error = ({ text, color }) => (\r\n  <Container>\r\n    <Text color={color}>{text}</Text>\r\n  </Container>\r\n);\r\n\r\nError.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  color: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Error;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  font-size: 12px;\r\n`;\r\n\r\nconst Image = styled.div`\r\n  background-image: url(${props => props.bgUrl});\r\n  height: 180px;\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n  border-radius: 4px;\r\n  background-position: center center;\r\n  transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n  position: absolute;\r\n  bottom: 5px;\r\n  right: 5px;\r\n  opacity: 0;\r\n  transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  margin-bottom: 5px;\r\n  &:hover {\r\n    ${Image} {\r\n      opacity: 0.3;\r\n    }\r\n    ${Rating} {\r\n      opacity: 1;\r\n    }\r\n  }\r\n  position: relative;\r\n`;\r\n\r\nconst Title = styled.span`\r\n  display: block;\r\n  margin-bottom: 3px;\r\n`;\r\n\r\nconst Year = styled.span`\r\n  font-size: 10px;\r\n  color: rgba(255, 255, 255, 0.5);\r\n`;\r\n\r\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\r\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\r\n    <Container>\r\n      <ImageContainer>\r\n        <Image\r\n          bgUrl={\r\n            imageUrl\r\n              ? `https://image.tmdb.org/t/p/w300/${imageUrl}`\r\n              : require(\"../assets/noPosterSmall.png\")\r\n          }\r\n        ></Image>\r\n        <Rating>\r\n          <span role=\"img\" aria-label=\"rating\">\r\n            🌟\r\n          </span>{\" \"}\r\n          {rating}/10\r\n        </Rating>\r\n      </ImageContainer>\r\n      <Title>\r\n        {title.length > 15 ? `${title.substring(0, 18)}...` : title}\r\n      </Title>\r\n      <Year>{year}</Year>\r\n    </Container>\r\n  </Link>\r\n);\r\n\r\nPoster.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  imageUrl: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n  rating: PropTypes.number,\r\n  year: PropTypes.string,\r\n  isMovie: PropTypes.bool\r\n};\r\n\r\nexport default Poster;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst HomePresenter = ({ nowPlaying, upcoming, popular, error, loading }) =>\r\n  loading ? (\r\n    <Loader />\r\n  ) : (\r\n    <Container>\r\n      <Helmet>\r\n        <title>Movies | Nomflix</title>\r\n      </Helmet>\r\n      {nowPlaying && nowPlaying.length > 0 && (\r\n        <Section title=\"Now Playing\">\r\n          {nowPlaying.map(movie => (\r\n            <Poster\r\n              key={movie.id}\r\n              id={movie.id}\r\n              title={movie.original_title}\r\n              imageUrl={movie.poster_path}\r\n              rating={movie.vote_average}\r\n              year={movie.release_date && movie.release_date.substring(0, 4)}\r\n              isMovie={true}\r\n            />\r\n          ))}\r\n        </Section>\r\n      )}\r\n      {upcoming && upcoming.length > 0 && (\r\n        <Section title=\"Upcoming Movies\">\r\n          {upcoming.map(movie => (\r\n            <Poster\r\n              key={movie.id}\r\n              id={movie.id}\r\n              title={movie.original_title}\r\n              imageUrl={movie.poster_path}\r\n              rating={movie.vote_average}\r\n              year={movie.release_date && movie.release_date.substring(0, 4)}\r\n              isMovie={true}\r\n            />\r\n          ))}\r\n        </Section>\r\n      )}\r\n      {popular && popular.length > 0 && (\r\n        <Section title=\"Popular Movies\">\r\n          {popular.map(movie => (\r\n            <Poster\r\n              key={movie.id}\r\n              id={movie.id}\r\n              title={movie.original_title}\r\n              imageUrl={movie.poster_path}\r\n              rating={movie.vote_average}\r\n              year={movie.release_date && movie.release_date.substring(0, 4)}\r\n              isMovie={true}\r\n            />\r\n          ))}\r\n        </Section>\r\n      )}\r\n      {error && <Message color=\"#e74c3c\" text={error} />}\r\n    </Container>\r\n  );\r\n\r\nHomePresenter.propTypes = {\r\n  nowPlaying: PropTypes.array,\r\n  upcoming: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  error: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default HomePresenter;\r\n","import axios from \"axios\";\r\n\r\nconst config = {\r\n  params: {\r\n    api_key: \"72bd8a884f26215e9f8e71bde34af65f\",\r\n    language: \"ko-KR\"\r\n  }\r\n};\r\n\r\nconst api = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3/\"\r\n});\r\n\r\nexport const moviesApi = {\r\n  nowPlaying: () => api.get(\"movie/now_playing\", config),\r\n  upcoming: () => api.get(\"movie/upcoming\", config),\r\n  popular: () => api.get(\"movie/popular\", config),\r\n  movieDetail: id =>\r\n    api.get(`movie/${id}`, {\r\n      params: {\r\n        api_key: \"72bd8a884f26215e9f8e71bde34af65f\",\r\n        language: \"ko-KR\",\r\n        append_to_response: \"videos\"\r\n      }\r\n    }),\r\n  search: term =>\r\n    api.get(\"search/movie\", {\r\n      params: {\r\n        api_key: \"72bd8a884f26215e9f8e71bde34af65f\",\r\n        language: \"ko-KR\",\r\n        query: encodeURIComponent(term)\r\n      }\r\n    })\r\n};\r\n\r\nexport const tvApi = {\r\n  topRated: () => api.get(\"tv/top_rated\", config),\r\n  popular: () => api.get(\"tv/popular\", config),\r\n  airingToday: () => api.get(\"tv/airing_today\", config),\r\n  showDetail: id =>\r\n    api.get(`tv/${id}`, {\r\n      params: {\r\n        api_key: \"72bd8a884f26215e9f8e71bde34af65f\",\r\n        language: \"ko-KR\",\r\n        append_to_response: \"videos\"\r\n      }\r\n    }),\r\n  search: term =>\r\n    api.get(\"search/tv\", {\r\n      params: {\r\n        api_key: \"72bd8a884f26215e9f8e71bde34af65f\",\r\n        language: \"ko-KR\",\r\n        query: encodeURIComponent(term)\r\n      }\r\n    })\r\n};\r\n","import HomeContainer from \"./HomeContainer\";\r\n\r\nexport default HomeContainer;\r\n","import React from \"react\";\r\nimport HomePresenter from \"./HomePresenter\";\r\nimport { moviesApi } from \"api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    nowPlaying: null,\r\n    upcoming: null,\r\n    popular: null,\r\n    error: null,\r\n    loading: true\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: nowPlaying }\r\n      } = await moviesApi.nowPlaying();\r\n      const {\r\n        data: { results: upcoming }\r\n      } = await moviesApi.upcoming();\r\n      const {\r\n        data: { results: popular }\r\n      } = await moviesApi.popular();\r\n      this.setState({\r\n        nowPlaying,\r\n        upcoming,\r\n        popular\r\n      });\r\n    } catch {\r\n      this.setState({\r\n        error: \"Can't find movies information.\"\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\r\n    return (\r\n      <HomePresenter\r\n        nowPlaying={nowPlaying}\r\n        upcoming={upcoming}\r\n        popular={popular}\r\n        error={error}\r\n        loading={loading}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Loader from \"Components/Loader\";\r\nimport Section from \"Components/Section\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  margin-bottom: 50px;\r\n  width: 100%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  all: unset;\r\n  font-size: 28px;\r\n  width: 100%;\r\n`;\r\n\r\nconst SearchPresenter = ({\r\n  movieResults,\r\n  tvResults,\r\n  searchTerm,\r\n  error,\r\n  loading,\r\n  handleSubmit,\r\n  updateTerm\r\n}) => (\r\n  <Container>\r\n    <Helmet>\r\n      <title>Search | Nomflix</title>\r\n    </Helmet>\r\n    <Form onSubmit={handleSubmit}>\r\n      <Input\r\n        placeholder=\"Search Movies or TV Shows...\"\r\n        value={searchTerm}\r\n        onChange={updateTerm}\r\n      />\r\n    </Form>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <>\r\n        {movieResults && movieResults.length > 0 && (\r\n          <Section title=\"Movie Results\">\r\n            {movieResults.map(movie => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                title={movie.original_title}\r\n                imageUrl={movie.poster_path}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date && movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {tvResults && tvResults.length > 0 && (\r\n          <Section title=\"TV Shows Results\">\r\n            {tvResults.map(show => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                title={show.original_name}\r\n                imageUrl={show.poster_path}\r\n                rating={show.vote_average}\r\n                year={\r\n                  show.first_air_date && show.first_air_date.substring(0, 4)\r\n                }\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message color=\"#e74c3c\" text={error} />}\r\n        {tvResults &&\r\n          movieResults &&\r\n          tvResults.length === 0 &&\r\n          movieResults.length === 0 && (\r\n            <Message text=\"Nothing Found\" color=\"#95a5a6\" />\r\n          )}\r\n      </>\r\n    )}\r\n  </Container>\r\n);\r\n\r\nSearchPresenter.propTypes = {\r\n  movieResults: PropTypes.array,\r\n  tvResults: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n  searchTerm: PropTypes.string,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  updateTerm: PropTypes.func.isRequired\r\n};\r\n\r\nexport default SearchPresenter;\r\n","import SearchContainer from \"./SearchContainer\";\r\n\r\nexport default SearchContainer;\r\n","import React from \"react\";\r\nimport SearchPresenter from \"./SearchPresenter\";\r\nimport { moviesApi } from \"api\";\r\nimport { tvApi } from \"api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    movieResults: null,\r\n    tvResults: null,\r\n    searchTerm: \"\",\r\n    error: null,\r\n    loading: false\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    const { searchTerm } = this.state;\r\n    if (searchTerm !== \"\") {\r\n      this.searchByTerm();\r\n    }\r\n  };\r\n\r\n  updateTerm = event => {\r\n    const {\r\n      target: { value }\r\n    } = event;\r\n    console.log(value);\r\n    this.setState({ searchTerm: value });\r\n  };\r\n\r\n  searchByTerm = async () => {\r\n    const { searchTerm } = this.state;\r\n    this.setState({ loading: true });\r\n    try {\r\n      const {\r\n        data: { results: movieResults }\r\n      } = await moviesApi.search(searchTerm);\r\n      const {\r\n        data: { results: tvResults }\r\n      } = await tvApi.search(searchTerm);\r\n      this.setState({\r\n        movieResults,\r\n        tvResults\r\n      });\r\n    } catch {\r\n      this.setState({ error: \"Can't find results.\" });\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { movieResults, tvResults, searchTerm, error, loading } = this.state;\r\n\r\n    return (\r\n      <SearchPresenter\r\n        movieResults={movieResults}\r\n        tvResults={tvResults}\r\n        searchTerm={searchTerm}\r\n        error={error}\r\n        loading={loading}\r\n        handleSubmit={this.handleSubmit}\r\n        updateTerm={this.updateTerm}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst TVPresenter = ({ topRated, popular, airingToday, error, loading }) =>\r\n  loading ? (\r\n    <Loader />\r\n  ) : (\r\n    <Container>\r\n      <Helmet>\r\n        <title>TV shows | Nomflix</title>\r\n      </Helmet>\r\n      {topRated && topRated.length > 0 && (\r\n        <Section title=\"Top Rated Shows\">\r\n          {topRated.map(show => (\r\n            <Poster\r\n              key={show.id}\r\n              id={show.id}\r\n              title={show.original_name}\r\n              imageUrl={show.poster_path}\r\n              rating={show.vote_average}\r\n              year={show.first_air_date && show.first_air_date.substring(0, 4)}\r\n            />\r\n          ))}\r\n        </Section>\r\n      )}\r\n      {popular && popular.length > 0 && (\r\n        <Section title=\"Popular Shows\">\r\n          {popular.map(show => (\r\n            <Poster\r\n              key={show.id}\r\n              id={show.id}\r\n              title={show.original_name}\r\n              imageUrl={show.poster_path}\r\n              rating={show.vote_average}\r\n              year={show.first_air_date && show.first_air_date.substring(0, 4)}\r\n            />\r\n          ))}\r\n        </Section>\r\n      )}\r\n      {airingToday && airingToday.length > 0 && (\r\n        <Section title=\"Airing Today\">\r\n          {airingToday.map(show => (\r\n            <Poster\r\n              key={show.id}\r\n              id={show.id}\r\n              title={show.original_name}\r\n              imageUrl={show.poster_path}\r\n              rating={show.vote_average}\r\n              year={show.first_air_date && show.first_air_date.substring(0, 4)}\r\n            />\r\n          ))}\r\n        </Section>\r\n      )}\r\n      {error && <Message color=\"#e74c3c\" text={error} />}\r\n    </Container>\r\n  );\r\n\r\nTVPresenter.propTypes = {\r\n  topRated: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  airingToday: PropTypes.array,\r\n  error: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default TVPresenter;\r\n","import TVContainer from \"./TVContainer\";\r\n\r\nexport default TVContainer;\r\n","import React from \"react\";\r\nimport TVPresenter from \"./TVPresenter\";\r\nimport { tvApi } from \"api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    topRated: null,\r\n    popular: null,\r\n    airingToday: null,\r\n    error: null,\r\n    loading: true\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: topRated }\r\n      } = await tvApi.topRated();\r\n      const {\r\n        data: { results: popular }\r\n      } = await tvApi.popular();\r\n      const {\r\n        data: { results: airingToday }\r\n      } = await tvApi.airingToday();\r\n      this.setState({\r\n        topRated,\r\n        popular,\r\n        airingToday\r\n      });\r\n    } catch {\r\n      this.setState({ error: \"Can't find TV information\" });\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { topRated, popular, airingToday, error, loading } = this.state;\r\n    return (\r\n      <TVPresenter\r\n        topRated={topRated}\r\n        popular={popular}\r\n        airingToday={airingToday}\r\n        error={error}\r\n        loading={loading}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loader from \"Components/Loader\";\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  height: calc(100vh - 50px);\r\n  position: relative;\r\n  padding: 50px;\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n  position: relative;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: url(${props => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  position: absolute;\r\n  filter: blur(3px);\r\n  opacity: 0.5;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  z-index: 1;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n  width: 30%;\r\n  height: 100%;\r\n  background-image: url(${props => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst Data = styled.div`\r\n  width: 70%;\r\n  margin-left: 10px;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 32px;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n  margin: 20px 0px;\r\n`;\r\n\r\nconst Item = styled.span``;\r\n\r\nconst Divider = styled.span`\r\n  margin: 0 10px;\r\n`;\r\n\r\nconst Overview = styled.p`\r\n  font-size: 12px;\r\n  opacity: 0.7;\r\n  line-height: 1.5;\r\n  width: 80%;\r\n`;\r\n\r\nconst DetailPresenter = ({ result, error, loading }) =>\r\n  loading ? (\r\n    <Loader />\r\n  ) : (\r\n    <Container>\r\n      <Helmet>\r\n        <title>\r\n          {result.original_title ? result.original_title : result.original_name}{\" \"}\r\n          | nomflix\r\n        </title>\r\n      </Helmet>\r\n      <Backdrop\r\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\r\n      />\r\n      <Content>\r\n        <Cover\r\n          bgImage={\r\n            result.poster_path\r\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\r\n              : require(\"../../assets/noPosterSmall.png\")\r\n          }\r\n        />\r\n        <Data>\r\n          <Title>\r\n            {result.title ? result.title : result.name}(\r\n            {result.original_title\r\n              ? result.original_title\r\n              : result.original_name}\r\n            )\r\n          </Title>\r\n          <ItemContainer>\r\n            <Item>\r\n              {result.release_date\r\n                ? result.release_date.substring(0, 4)\r\n                : result.first_air_date.substring(0, 4)}\r\n            </Item>\r\n            <Divider role=\"image\" aria-label=\"divider\">\r\n              •\r\n            </Divider>\r\n            <Item>\r\n              {result.runtime ? result.runtime : result.episode_run_time} min\r\n            </Item>\r\n            <Divider role=\"image\" aria-label=\"divider\">\r\n              •\r\n            </Divider>\r\n            <Item>\r\n              {result.genres &&\r\n                result.genres.map((genre, index) =>\r\n                  index === result.genres.length - 1\r\n                    ? genre.name\r\n                    : `${genre.name}/`\r\n                )}\r\n            </Item>\r\n            <Divider role=\"image\" aria-label=\"divider\">\r\n              •\r\n            </Divider>\r\n            <Item>\r\n              <Link to=\"\">{result.homepage}</Link>\r\n            </Item>\r\n          </ItemContainer>\r\n          <Overview>{result.overview}</Overview>\r\n        </Data>\r\n      </Content>\r\n    </Container>\r\n  );\r\n\r\nDetailPresenter.propTypes = {\r\n  result: PropTypes.object,\r\n  error: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default DetailPresenter;\r\n","import DetailContainer from \"./DetailContainer\";\r\n\r\nexport default DetailContainer;\r\n","import React from \"react\";\r\nimport DetailPresenter from \"./DetailPresenter\";\r\nimport { moviesApi, tvApi } from \"../../api\";\r\n\r\nexport default class extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const {\r\n      location: { pathname }\r\n    } = props;\r\n    this.state = {\r\n      result: null,\r\n      error: null,\r\n      loading: true,\r\n      isMovie: pathname.includes(\"/movie/\")\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const {\r\n      match: {\r\n        params: { id }\r\n      },\r\n      history: { push }\r\n    } = this.props;\r\n    const parsedId = parseInt(id);\r\n    const { isMovie } = this.state;\r\n    if (isNaN(parsedId)) {\r\n      return push(\"/\");\r\n    }\r\n    let result = null;\r\n    try {\r\n      if (isMovie) {\r\n        ({ data: result } = await moviesApi.movieDetail(parsedId));\r\n      } else {\r\n        ({ data: result } = await tvApi.showDetail(parsedId));\r\n      }\r\n    } catch {\r\n      this.setState({ error: \"Can't find anything\" });\r\n    } finally {\r\n      this.setState({ loading: false, result });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { result, error, loading } = this.state;\r\n    return <DetailPresenter result={result} error={error} loading={loading} />;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  HashRouter as Router,\r\n  Route,\r\n  Redirect,\r\n  Switch\r\n} from \"react-router-dom\";\r\nimport Header from \"Components/Header\";\r\nimport Home from \"Routes/Home\";\r\nimport Search from \"Routes/Search\";\r\nimport TV from \"Routes/TV\";\r\nimport Detail from \"Routes/Detail\";\r\nexport default () => (\r\n  <Router>\r\n    <>\r\n      <Header />\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Home} />\r\n        <Route path=\"/tv\" exact component={TV} />\r\n        <Route path=\"/search\" component={Search} />\r\n        <Route path=\"/movie/:id\" component={Detail} />\r\n        <Route path=\"/show/:id\" component={Detail} />\r\n        <Redirect from=\"*\" to=\"/\" />\r\n      </Switch>\r\n    </>\r\n  </Router>\r\n);\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nconst globalStyles = createGlobalStyle`\r\n    ${reset};\r\n    a{\r\n        text-decoration:none;\r\n        color:inherit;\r\n    }\r\n    *{\r\n        box-sizing:border-box;\r\n    }\r\n    body{\r\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n        font-size:12px;\r\n        background-color:rgba(20,20,20,1);\r\n        color:white;\r\n        padding-top:50px;\r\n    }\r\n`;\r\n\r\nexport default globalStyles;\r\n","import React, { Component } from \"react\";\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Components/App\";\nimport \"./api\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}